import java.util.HashMap;

public class twoSum {
    public  int[] twoSum(int[] nums, int target) {
        HashMap<Integer, Integer> numMap = new HashMap<>(); // Stores number and its index
        
        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i]; // Find the complement
            if (numMap.containsKey(complement)) {
                return new int[]{numMap.get(complement), i}; // Return indices
            }
            numMap.put(nums[i], i); // Store the number and its index
        }
        return new int[]{}; // Return empty array if no solution found (shouldn't happen)
    }

    public static void main(String[] args) {
        int[] nums1 = {2, 7, 11, 15};
        int target1 = 9;
        int[] result1 = twoSum(nums1, target1);
        System.out.println("Output: [" + result1[0] + ", " + result1[1] + "]");

        int[] nums2 = {3, 2, 4};
        int target2 = 6;
        int[] result2 = twoSum(nums2, target2);
        System.out.println("Output: [" + result2[0] + ", " + result2[1] + "]");

        int[] nums3 = {3, 3};
        int target3 = 6;
        int[] result3 = twoSum(nums3, target3);
        System.out.println("Output: [" + result3[0] + ", " + result3[1] + "]");
    }
}
